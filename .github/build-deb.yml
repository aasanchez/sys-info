name: Build-Deb

on:
  push:
    branches:
      - master

jobs:
  package-build:
    runs-on: ubuntu-24.04
    needs: [ test, build ]
    steps:
      - name: Install build dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential dpkg-dev gpg tree

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download sys_info build
        uses: actions/download-artifact@v4
        with:
          name: sys-info

      - name: Set binary location
        run: |
          mkdir -p pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/usr/bin
          cp -r sys-info pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/usr/bin
          sudo chmod 755 pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/usr/bin/sys-info
          tree

      - name: DEBIAN control and postinst files
        run: |
          # Debian package structure
          mkdir -p pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN
          cp pkg/scripts/control  pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/control
          sed -i "s/<VERSION>/"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"/g" pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/control
          sed -i "s/<ARCH>/"${{ needs.build.outputs.ARCH }}"/g" pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/control

          # Pre installation script
          cp pkg/scripts/preinst pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/preinst
          chmod 755 pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/preinst

          # Post installation script
          cp pkg/scripts/postinst pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/postinst
          chmod 755 pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/postinst

          # Pre Removal script
          cp pkg/scripts/prerm pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/prerm
          chmod 755 pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/prerm

          # Post Removal script
          cp pkg/scripts/postrm pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/postrm
          chmod 755 pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"/DEBIAN/postrm

      - name: Build DEB package
        run: |
          cd pkg
          dpkg --build sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}"

      - name: relocate artifact
        run: |
          mv pkg/sys-info_"${{ needs.build.outputs.GIT_TAG }}"-"${{ needs.build.outputs.BUILD_DATE }}"_"${{ needs.build.outputs.ARCH }}".deb sys-info.deb
          ls -la sys-info.deb

      - name: Debian Package artifact
        uses: actions/upload-artifact@v4
        with:
          name: sys-info.deb
          path: sys-info.deb
          retention-days: 5

  package-test_get-info:
    runs-on: ubuntu-24.04
    needs: package-build
    steps:
      - name: Download debian-pkg build
        uses: actions/download-artifact@v4
        with:
          name: sys-info.deb

      - name: dpkg-deb --info
        run: dpkg-deb --info sys-info.deb

  package-test_get-content:
    runs-on: ubuntu-24.04
    needs: package-build
    steps:
      - name: Download debian-pkg build
        uses: actions/download-artifact@v4
        with:
          name: sys-info.deb

      - name: dpkg-deb --contents
        run: dpkg-deb --contents sys-info.deb

  package-test_installation:
    needs: package-build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        container:
          - "ubuntu:24.04"
          - "debian:12"
    container:
      image: ${{ matrix.container }}
    steps:
      - name: Install dependencies
        run: apt-get update

      - name: Download debian package
        uses: actions/download-artifact@v4
        with:
          name: sys-info.deb

      - name: System Information
        run: |
          echo "--- OS Release ---"
          cat /etc/os-release
          echo "--- Kernel Information ---"
          uname -a

      - name: Install package
        run: dpkg -i sys-info.deb

      - name: Package Status
        run: dpkg -l | grep sys-info

      - name: Verify binary exists and permissions
        run: ls -la /usr/bin/sys-info

      - name: Verify binary exists
        run: which sys-info

      - name: Test execution
        run: sys-info || true

      - name: Remove package
        run: dpkg -r sys-info

      - name: Verify removal
        run: |
          if which sys-info; then
            echo "Package not properly removed"
            exit 1
          fi

  create-build-tag:
    runs-on: ubuntu-24.04
    needs: [ package-test_get-content, package-test_get-info, package-test_installation, build ]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.PAT }}" | gh auth login --with-token

      - name: Get SHA for Source Tag
        id: get_sha
        run: |
          SOURCE_TAG="${{ needs.build.outputs.GIT_TAG }}"
          SOURCE_SHA=$(gh api repos/${{ github.repository }}/git/ref/tags/$SOURCE_TAG --jq '.object.sha')
          echo "SOURCE_SHA=$SOURCE_SHA" >> $GITHUB_ENV

      - name: Create New Tag
        run: |
          NEW_TAG="${{ needs.build.outputs.GIT_TAG }}-${{ needs.build.outputs.BUILD_DATE }}"
          gh api repos/${{ github.repository }}/git/refs \
            -X POST \
            -F ref="refs/tags/$NEW_TAG" \
            -F sha="$SOURCE_SHA"

  create-release:
    runs-on: ubuntu-24.04
    needs: [ create-build-tag, build ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download debian package
        uses: actions/download-artifact@v4
        with:
          name: sys-info.deb

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.PAT }}" | gh auth login --with-token

      - name: Create Release
        run: |
          gh release create ${{ needs.build.outputs.GIT_TAG }}-${{ needs.build.outputs.BUILD_DATE }} \
            sys-info.deb \
            --title "Release ${{ needs.build.outputs.GIT_TAG }}-${{ needs.build.outputs.BUILD_DATE }}" \
            --notes "Automatically generated release for ${{ needs.build.outputs.GIT_TAG }}-${{ needs.build.outputs.BUILD_DATE }}"
